# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import caching_pb2 as caching__pb2


class CachingStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get_vintage_by_id = channel.unary_unary(
                '/Caching/get_vintage_by_id',
                request_serializer=caching__pb2.VintageID.SerializeToString,
                response_deserializer=caching__pb2.Vintage.FromString,
                )
        self.get_vintages_by_ids = channel.unary_unary(
                '/Caching/get_vintages_by_ids',
                request_serializer=caching__pb2.VintageIDs.SerializeToString,
                response_deserializer=caching__pb2.Vintages.FromString,
                )
        self.get_vintage_title_by_id = channel.unary_unary(
                '/Caching/get_vintage_title_by_id',
                request_serializer=caching__pb2.VintageID.SerializeToString,
                response_deserializer=caching__pb2.VintageTitle.FromString,
                )
        self.get_vintage_titles_by_ids = channel.unary_unary(
                '/Caching/get_vintage_titles_by_ids',
                request_serializer=caching__pb2.VintageIDs.SerializeToString,
                response_deserializer=caching__pb2.VintageTitles.FromString,
                )
        self.get_price_by_vintage_id = channel.unary_unary(
                '/Caching/get_price_by_vintage_id',
                request_serializer=caching__pb2.VintageID.SerializeToString,
                response_deserializer=caching__pb2.Price.FromString,
                )
        self.get_prices_by_vintage_ids = channel.unary_unary(
                '/Caching/get_prices_by_vintage_ids',
                request_serializer=caching__pb2.VintageIDs.SerializeToString,
                response_deserializer=caching__pb2.Prices.FromString,
                )
        self.get_vintage_ids_by_wine_id = channel.unary_unary(
                '/Caching/get_vintage_ids_by_wine_id',
                request_serializer=caching__pb2.WineID.SerializeToString,
                response_deserializer=caching__pb2.VintageIDs.FromString,
                )
        self.get_vintage_ids_by_wine_ids = channel.unary_unary(
                '/Caching/get_vintage_ids_by_wine_ids',
                request_serializer=caching__pb2.WineIDs.SerializeToString,
                response_deserializer=caching__pb2.VintageIDs.FromString,
                )
        self.get_wine_id_by_vintage_id = channel.unary_unary(
                '/Caching/get_wine_id_by_vintage_id',
                request_serializer=caching__pb2.VintageID.SerializeToString,
                response_deserializer=caching__pb2.WineID.FromString,
                )
        self.get_wine_ids_by_vintage_ids = channel.unary_unary(
                '/Caching/get_wine_ids_by_vintage_ids',
                request_serializer=caching__pb2.VintageIDs.SerializeToString,
                response_deserializer=caching__pb2.WineIDs.FromString,
                )
        self.get_unordered_wine_ids_by_vintage_ids = channel.unary_unary(
                '/Caching/get_unordered_wine_ids_by_vintage_ids',
                request_serializer=caching__pb2.VintageIDs.SerializeToString,
                response_deserializer=caching__pb2.WineIDs.FromString,
                )
        self.get_best_vintage_id_by_wine_id = channel.unary_unary(
                '/Caching/get_best_vintage_id_by_wine_id',
                request_serializer=caching__pb2.WineID.SerializeToString,
                response_deserializer=caching__pb2.VintageID.FromString,
                )
        self.get_best_vintage_ids_by_wine_ids = channel.unary_unary(
                '/Caching/get_best_vintage_ids_by_wine_ids',
                request_serializer=caching__pb2.WineIDs.SerializeToString,
                response_deserializer=caching__pb2.VintageIDs.FromString,
                )
        self.get_unordered_best_vintage_ids_by_wine_ids = channel.unary_unary(
                '/Caching/get_unordered_best_vintage_ids_by_wine_ids',
                request_serializer=caching__pb2.WineIDs.SerializeToString,
                response_deserializer=caching__pb2.VintageIDs.FromString,
                )
        self.get_high_rated_vintage_ids_from_wine_id = channel.unary_unary(
                '/Caching/get_high_rated_vintage_ids_from_wine_id',
                request_serializer=caching__pb2.WineID.SerializeToString,
                response_deserializer=caching__pb2.VintageIDs.FromString,
                )
        self.get_high_rated_vintage_ids_from_wine_ids = channel.unary_unary(
                '/Caching/get_high_rated_vintage_ids_from_wine_ids',
                request_serializer=caching__pb2.WineIDs.SerializeToString,
                response_deserializer=caching__pb2.VintageIDs.FromString,
                )


class CachingServicer(object):
    """Missing associated documentation comment in .proto file."""

    def get_vintage_by_id(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_vintages_by_ids(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_vintage_title_by_id(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_vintage_titles_by_ids(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_price_by_vintage_id(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_prices_by_vintage_ids(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_vintage_ids_by_wine_id(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_vintage_ids_by_wine_ids(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_wine_id_by_vintage_id(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_wine_ids_by_vintage_ids(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_unordered_wine_ids_by_vintage_ids(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_best_vintage_id_by_wine_id(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_best_vintage_ids_by_wine_ids(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_unordered_best_vintage_ids_by_wine_ids(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_high_rated_vintage_ids_from_wine_id(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_high_rated_vintage_ids_from_wine_ids(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CachingServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get_vintage_by_id': grpc.unary_unary_rpc_method_handler(
                    servicer.get_vintage_by_id,
                    request_deserializer=caching__pb2.VintageID.FromString,
                    response_serializer=caching__pb2.Vintage.SerializeToString,
            ),
            'get_vintages_by_ids': grpc.unary_unary_rpc_method_handler(
                    servicer.get_vintages_by_ids,
                    request_deserializer=caching__pb2.VintageIDs.FromString,
                    response_serializer=caching__pb2.Vintages.SerializeToString,
            ),
            'get_vintage_title_by_id': grpc.unary_unary_rpc_method_handler(
                    servicer.get_vintage_title_by_id,
                    request_deserializer=caching__pb2.VintageID.FromString,
                    response_serializer=caching__pb2.VintageTitle.SerializeToString,
            ),
            'get_vintage_titles_by_ids': grpc.unary_unary_rpc_method_handler(
                    servicer.get_vintage_titles_by_ids,
                    request_deserializer=caching__pb2.VintageIDs.FromString,
                    response_serializer=caching__pb2.VintageTitles.SerializeToString,
            ),
            'get_price_by_vintage_id': grpc.unary_unary_rpc_method_handler(
                    servicer.get_price_by_vintage_id,
                    request_deserializer=caching__pb2.VintageID.FromString,
                    response_serializer=caching__pb2.Price.SerializeToString,
            ),
            'get_prices_by_vintage_ids': grpc.unary_unary_rpc_method_handler(
                    servicer.get_prices_by_vintage_ids,
                    request_deserializer=caching__pb2.VintageIDs.FromString,
                    response_serializer=caching__pb2.Prices.SerializeToString,
            ),
            'get_vintage_ids_by_wine_id': grpc.unary_unary_rpc_method_handler(
                    servicer.get_vintage_ids_by_wine_id,
                    request_deserializer=caching__pb2.WineID.FromString,
                    response_serializer=caching__pb2.VintageIDs.SerializeToString,
            ),
            'get_vintage_ids_by_wine_ids': grpc.unary_unary_rpc_method_handler(
                    servicer.get_vintage_ids_by_wine_ids,
                    request_deserializer=caching__pb2.WineIDs.FromString,
                    response_serializer=caching__pb2.VintageIDs.SerializeToString,
            ),
            'get_wine_id_by_vintage_id': grpc.unary_unary_rpc_method_handler(
                    servicer.get_wine_id_by_vintage_id,
                    request_deserializer=caching__pb2.VintageID.FromString,
                    response_serializer=caching__pb2.WineID.SerializeToString,
            ),
            'get_wine_ids_by_vintage_ids': grpc.unary_unary_rpc_method_handler(
                    servicer.get_wine_ids_by_vintage_ids,
                    request_deserializer=caching__pb2.VintageIDs.FromString,
                    response_serializer=caching__pb2.WineIDs.SerializeToString,
            ),
            'get_unordered_wine_ids_by_vintage_ids': grpc.unary_unary_rpc_method_handler(
                    servicer.get_unordered_wine_ids_by_vintage_ids,
                    request_deserializer=caching__pb2.VintageIDs.FromString,
                    response_serializer=caching__pb2.WineIDs.SerializeToString,
            ),
            'get_best_vintage_id_by_wine_id': grpc.unary_unary_rpc_method_handler(
                    servicer.get_best_vintage_id_by_wine_id,
                    request_deserializer=caching__pb2.WineID.FromString,
                    response_serializer=caching__pb2.VintageID.SerializeToString,
            ),
            'get_best_vintage_ids_by_wine_ids': grpc.unary_unary_rpc_method_handler(
                    servicer.get_best_vintage_ids_by_wine_ids,
                    request_deserializer=caching__pb2.WineIDs.FromString,
                    response_serializer=caching__pb2.VintageIDs.SerializeToString,
            ),
            'get_unordered_best_vintage_ids_by_wine_ids': grpc.unary_unary_rpc_method_handler(
                    servicer.get_unordered_best_vintage_ids_by_wine_ids,
                    request_deserializer=caching__pb2.WineIDs.FromString,
                    response_serializer=caching__pb2.VintageIDs.SerializeToString,
            ),
            'get_high_rated_vintage_ids_from_wine_id': grpc.unary_unary_rpc_method_handler(
                    servicer.get_high_rated_vintage_ids_from_wine_id,
                    request_deserializer=caching__pb2.WineID.FromString,
                    response_serializer=caching__pb2.VintageIDs.SerializeToString,
            ),
            'get_high_rated_vintage_ids_from_wine_ids': grpc.unary_unary_rpc_method_handler(
                    servicer.get_high_rated_vintage_ids_from_wine_ids,
                    request_deserializer=caching__pb2.WineIDs.FromString,
                    response_serializer=caching__pb2.VintageIDs.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Caching', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Caching(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def get_vintage_by_id(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Caching/get_vintage_by_id',
            caching__pb2.VintageID.SerializeToString,
            caching__pb2.Vintage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_vintages_by_ids(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Caching/get_vintages_by_ids',
            caching__pb2.VintageIDs.SerializeToString,
            caching__pb2.Vintages.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_vintage_title_by_id(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Caching/get_vintage_title_by_id',
            caching__pb2.VintageID.SerializeToString,
            caching__pb2.VintageTitle.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_vintage_titles_by_ids(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Caching/get_vintage_titles_by_ids',
            caching__pb2.VintageIDs.SerializeToString,
            caching__pb2.VintageTitles.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_price_by_vintage_id(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Caching/get_price_by_vintage_id',
            caching__pb2.VintageID.SerializeToString,
            caching__pb2.Price.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_prices_by_vintage_ids(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Caching/get_prices_by_vintage_ids',
            caching__pb2.VintageIDs.SerializeToString,
            caching__pb2.Prices.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_vintage_ids_by_wine_id(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Caching/get_vintage_ids_by_wine_id',
            caching__pb2.WineID.SerializeToString,
            caching__pb2.VintageIDs.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_vintage_ids_by_wine_ids(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Caching/get_vintage_ids_by_wine_ids',
            caching__pb2.WineIDs.SerializeToString,
            caching__pb2.VintageIDs.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_wine_id_by_vintage_id(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Caching/get_wine_id_by_vintage_id',
            caching__pb2.VintageID.SerializeToString,
            caching__pb2.WineID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_wine_ids_by_vintage_ids(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Caching/get_wine_ids_by_vintage_ids',
            caching__pb2.VintageIDs.SerializeToString,
            caching__pb2.WineIDs.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_unordered_wine_ids_by_vintage_ids(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Caching/get_unordered_wine_ids_by_vintage_ids',
            caching__pb2.VintageIDs.SerializeToString,
            caching__pb2.WineIDs.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_best_vintage_id_by_wine_id(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Caching/get_best_vintage_id_by_wine_id',
            caching__pb2.WineID.SerializeToString,
            caching__pb2.VintageID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_best_vintage_ids_by_wine_ids(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Caching/get_best_vintage_ids_by_wine_ids',
            caching__pb2.WineIDs.SerializeToString,
            caching__pb2.VintageIDs.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_unordered_best_vintage_ids_by_wine_ids(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Caching/get_unordered_best_vintage_ids_by_wine_ids',
            caching__pb2.WineIDs.SerializeToString,
            caching__pb2.VintageIDs.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_high_rated_vintage_ids_from_wine_id(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Caching/get_high_rated_vintage_ids_from_wine_id',
            caching__pb2.WineID.SerializeToString,
            caching__pb2.VintageIDs.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_high_rated_vintage_ids_from_wine_ids(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Caching/get_high_rated_vintage_ids_from_wine_ids',
            caching__pb2.WineIDs.SerializeToString,
            caching__pb2.VintageIDs.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
